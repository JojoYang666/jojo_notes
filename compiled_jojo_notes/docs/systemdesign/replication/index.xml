<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://jojoyang.site/jojo_notes/docs/systemdesign/replication/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://jojoyang.site/jojo_notes/docs/systemdesign/replication/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://jojoyang.site/jojo_notes/docs/systemdesign/replication/leaders_and_followers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://jojoyang.site/jojo_notes/docs/systemdesign/replication/leaders_and_followers/</guid>
      <description>Leaders and Followers # Leader-based replication/master-slave replication # client sends request to the leader which first writes the new data to its local storage Other replicas known as followers whenever the leader writes the new data to its local storage -&amp;gt; sends the data change to all of its followers as part of a replication log each replica take the log and write it to the local storage when client want to read from the db, it can either query the leader or any of followers.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://jojoyang.site/jojo_notes/docs/systemdesign/replication/problems_with_replication_lag/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://jojoyang.site/jojo_notes/docs/systemdesign/replication/problems_with_replication_lag/</guid>
      <description>Problems with Replication Lag # Leader-based replication requires all writes to go through a single node Read-only queries can go to any replica For workloads that consist of mostly reads and only a small percentage of writes(read-scaling architetecture) create many followers and distribute the read requests across those follower Only realistically works with asychronous replication unifortunately, reading from an asynchronous follower -&amp;gt; outdated information may be seen. but eventually can update to date when there is no more writing coming into this is called replication lag - maty be only a fraction of a second and not practice if the system is operating near capacity or if there is a problem in the network- the lag can easily increase to several seconds or even minutes.</description>
    </item>
    
  </channel>
</rss>
